version: '2.0'
networks:
  webphp:
    driver: bridge
    ipam:
      config:
        - subnet: 10.201.0.0/16
          gateway: 10.201.0.1
services:
    nginx:
        build:
            context: ./nginx
            dockerfile: Dockerfile
        container_name: c-nginx
        restart: always
        ports:
            - "81:80"
            - "443:443"
        volumes:
            - ./code:/var/www
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./nginx/sites-enabled:/etc/nginx/sites-enabled
            - ./nginx/ssl:/etc/nginx/ssl
            - ./nginx/log/nginx:/var/log/nginx
        links:
            - php
            - php7.0
            - mysql
            - mysql5.6
        networks:
            webphp:
                ipv4_address: 10.201.0.2
    php7.0:
        build:
            context: ./php
            dockerfile: Dockerfile7.0
        container_name: c-php-7.0
        restart: always
        user: www-data
        volumes:
            - ./code:/var/www
        links: 
            - mysql5.6
            - redis
        networks:
            webphp:
                ipv4_address: 10.201.0.3
    mysql5.6: 
        container_name: c-mysql-5.6
        image: mysql:5.6
        command: --default-authentication-plugin=mysql_native_password
        ports: 
            - "3308:3306"
        restart: always
        volumes:
            - ./mysql5:/var/lib/mysql
        environment:
            - MYSQL_DATABASE=nicjp
            - MYSQL_ROOT_PASSWORD=123456
        networks:
            webphp:
                ipv4_address: 10.201.0.4      
    php:
        build:
            context: ./php
            dockerfile: Dockerfile
        container_name: c-php
        restart: always
        user: www-data
        volumes:
            - ./code:/var/www
            # - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
            - ./php/cron:/var/spool/cron/crontabs
        links: 
            - mysql
            - redis
        networks:
            webphp:
                ipv4_address: 10.201.0.5
    mysql: 
        container_name: c-mysql
        image: mysql:latest
        command: --default-authentication-plugin=mysql_native_password
        ports: 
            - "3309:3306"
        restart: always
        volumes:
            - ./mysql:/var/lib/mysql
        environment:
            - MYSQL_DATABASE=projectlaravel
            - MYSQL_ROOT_PASSWORD=123456
        networks:
            webphp:
                ipv4_address: 10.201.0.6
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: 'c-phpmyadmin'
        links:
          - mysql
        environment:
          PMA_HOST: mysql
          PMA_PORT: 3306
        ports:
          - '8888:80'
        volumes: 
          - /sessions
        networks:
            webphp:
                ipv4_address: 10.201.0.7
    redis:
        container_name: c-redis
        image: redis
        restart: always
        environment:
            - ALLOW_EMPTY_PASSWORD=yes
        ports:
            - '6379:6379'
        networks:
            webphp:
                ipv4_address: 10.201.0.8
    elasticsearch:
        container_name: c-elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
        environment:
            - xpack.security.enabled=false
            - "discovery.type=single-node"
        networks:
            webphp:
                ipv4_address: 10.201.0.9
        ports:
            - 9200:9200
    kibana:
        container_name: c-kibana
        image: docker.elastic.co/kibana/kibana:7.11.0
        environment:
            - ELASTICSEARCH_HOSTS=http://c-elasticsearch:9200
        networks:
            webphp:
                ipv4_address: 10.201.0.10
        depends_on:
            - elasticsearch
        ports:
            - 5601:5601
    # memcached:
    #     image: memcached
    #     ports:
    #         - "11211:11211"
    # node:
    #     container_name: c-node
    #     build:
    #         context: ./node
    #         dockerfile: Dockerfile
    #     environment:
    #         - CHOKIDAR_USEPOLLING=true
    #     ports: 
    #         - "3000:3000"
    #     volumes:
    #         - /usr/src/app/node_modules
    #         - ./node:/usr/src/app
    
    # mercure:
    #    image: dunglas/mercure
    #    environment:
    #        DEBUG: "debug"
    #        SERVER_NAME: ':80'
    #        MERCURE_PUBLISHER_JWT_KEY: '~my-jwt-key-here~'
    #        MERCURE_SUBSCRIBER_JWT_KEY: '~my-jwt-key-here~'
    #        MERCURE_EXTRA_DIRECTIVES: |-
    #          cors_origins "http://127.0.0.1"
    #          anonymous
    #    ports:
    #        - "9000:80"